
def repoRoot = new File("..").canonicalFile

task generateModel {
    group = 'other'
    description = 'Parses SDK version from Source parameter and updates .props file accordingly. Does nothing if the Source is not set.'

    doLast {
        def rdgenJar = new File(repoRoot, "rider/lib/rdgen.jar")
        assert rdgenJar.isFile()

        // TODO: spaces
        def modelDir = new File(repoRoot, "rider/src/main/kotlin/com/jetbrains/rider/plugins/unity/model")
        def csOutput = new File(repoRoot, "resharper/src/resharper-unity/RdUnityProtocol")
        def ktOutput = new File(repoRoot, "rider/src/main/kotlin/com/jetbrains/rider/plugins/unity/RdUnityProtocol")
        def packageName = "com.jetbrains.rider.plugins.unity.model"
        def kotlinCompilerClasspath = "C:/work/dotnet-products/Packages/JetBrains.Platform.Kotlin.1.1.0.3/Kotlin/kotlinc/lib/*;C:/work/resharper-unity/rider/build/riderRD-2018.1-SNAPSHOT/lib/*"

        javaexec {
            main = "com.jetbrains.rider.generator.nova.MainKt"
            // ['C:/work/resharper-unity/rider/build/riderRD-2018.1-SNAPSHOT/lib/*',
            // classpath = files(['C:/work/resharper-unity/rider/build/riderRD-2018.1-SNAPSHOT/lib/*', kotlinCompilerClasspath, 'C:/work/resharper-unity/rider/lib/rdgen.jar'])
            classpath = files([kotlinCompilerClasspath, rdgenJar.absolutePath])
            systemProperty "model.out.src.cs.dir", "$csOutput"
            systemProperty "model.out.src.kt.dir", "$ktOutput"
            args = [
                    "-v", // verbose
                    "--compiler-classpath=$rdgenJar.absolutePath",
                    "--source=${modelDir}/rider",
                    "--packages=${packageName}.rider"
            ]
        }

        // TODO: if placed in one dir with different packages there will be generator clash
        javaexec {
            main = "com.jetbrains.rider.generator.nova.MainKt"
            // ['C:/work/resharper-unity/rider/build/riderRD-2018.1-SNAPSHOT/lib/*',
            // classpath = files(['C:/work/resharper-unity/rider/build/riderRD-2018.1-SNAPSHOT/lib/*', kotlinCompilerClasspath, 'C:/work/resharper-unity/rider/lib/rdgen.jar'])
            classpath = files([kotlinCompilerClasspath, rdgenJar.absolutePath])
            args = [
                "-v", // verbose
                "--compiler-classpath=$rdgenJar.absolutePath",
                "--source=${modelDir}/editorPlugin",
                "--packages=${packageName}.editorPlugin"
            ]
        }
    }
}